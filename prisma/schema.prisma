generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tag {
  id   Int    @id @default(autoincrement()) @map("tag_id")
  name String @map("name")

  @@map("tags")
}

model User {
  id           Int       @id @default(autoincrement()) @map("user_id")
  email        String    @unique @map("email")
  password     String    @map("password")
  profileImage String?   @map("profile_image")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  username     String?   @unique @map("username")
  Session      Session[]
  tokens       Token[]

  @@map("users")
}

model Token {
  id        Int      @id @default(autoincrement()) @map("token_id")
  token     String   @unique @map("token")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    Int?     @map("user_id")
  expiresAt BigInt   @map("expires_at")
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Session {
  id        String   @id @default(uuid()) @map("session_id")
  userId    Int      @map("user_id")
  token     String?
  userAgent String?  @map("user_agent")
  ipAddress String?  @map("ip_address")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

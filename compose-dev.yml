services:
  pg_db:
    image: postgres
    restart: always
    container_name: pg_db
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: notes
    ports:
      - "5432:5432"
    networks:
      - note-taking-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U prisma -d postgres" ]
      interval: 5s
      timeout: 2s
      retries: 20
    command: postgres -c listen_addresses='*'
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - note-taking-network
  note_taking_api:
    build:
      context: .
      target: development
    container_name: note_taking_api
    depends_on:
      pg_db:
        condition: service_healthy
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    env_file:
      - .env
    networks:
      - note-taking-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  prisma_studio:
    container_name: prisma_studio
    image: node:22.19.0-alpine3.21
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file:
      - .env
    networks:
      - note-taking-network
    depends_on:
      pg_db:
        condition: service_healthy
      note_taking_api:
        condition: service_started
networks:
  note-taking-network:
volumes:
  postgres_data:
